---
export interface Props {
  variant?: "primary" | "secondary";
  size?: "sm" | "md" | "lg";
  type?: "button" | "submit" | "link";
  class?: string;
  id?: string;
  [key: string]: any; // Pour accepter d'autres attributs HTML standard
}

const {
  variant = "primary",
  size = "md",
  type = "button",
  class: className = "",
  id,
  ...rest
} = Astro.props;

const baseClasses =
  "inline-flex items-center justify-center font-medium rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 transition-colors duration-300 opacity-100";

const variantClasses = {
  primary:
    "text-white bg-accent hover:bg-accent-hover focus:ring-accent active:bg-accent-active hover:opacity-90",
  secondary:
    "text-gray-700 bg-gray-100 hover:bg-gray-200 focus:ring-gray-500 active:bg-gray-300 hover:opacity-90",
};

const sizeClasses = {
  sm: "px-3 py-1.5 text-sm",
  md: "px-4 py-2 text-base",
  lg: "px-6 py-3 text-lg",
};

const classes = `${baseClasses} ${variantClasses[variant]} ${sizeClasses[size]} ${className}`;
---

<button
  type={type === "link" ? "button" : type}
  class={classes}
  id={id}
  {...rest}
>
  <slot />
</button>
