---
import Layout from "../layouts/Layout.astro";
import Icon from "../components/common/Icon.astro";
import Button from "../components/common/Button.astro";
import ErrorAnalysisPanel from "../components/vue/ErrorAnalysisPanel.vue";
import ProgressPanel from "../components/vue/ProgressPanel.vue";

// Note : les données seront chargées côté client via les components Vue
---

<Layout title="Progrès - Decival" currentPage="progress">
  <div class="container mx-auto px-4 py-8">
    <div class="flex justify-between items-center mb-6">
      <h1 class="text-2xl font-bold">Votre progression</h1>
      <Button id="exportButton" variant="secondary" size="sm">
        <Icon name="download" class="w-4 h-4 mr-2" />
        Exporter les résultats
      </Button>
    </div>

    <!-- Composant Vue pour la progression -->
    <ProgressPanel client:only />
  </div>
</Layout>

<script>
  // Script minimal pour gérer l'export CSV uniquement
  import { stats, testHistory } from "../stores/testStore";

  function exportResults() {
    const history = testHistory.get();
    const currentStats = stats.get();

    // En-têtes pour les statistiques globales
    let csvContent = "Statistiques globales\n";
    csvContent += `Tests complétés,${currentStats.totalTests}\n`;
    csvContent += `Score moyen,${Math.round(currentStats.averageScore)}%\n`;
    csvContent += `Meilleur score,${Math.round(currentStats.bestScore)}%\n\n`;

    // En-têtes pour l'historique des tests
    csvContent += "Historique des tests\n";
    csvContent += "Date,Type,Mode,Score,Questions correctes,Total questions\n";

    // Données de l'historique
    history.forEach((test) => {
      const correctAnswers = test.items.filter((i) => i.isCorrect).length;
      const date = new Date(test.startTime).toLocaleDateString();
      const score = Math.round((correctAnswers / test.items.length) * 100);

      csvContent += `${date},${test.type},${test.mode},${score}%,${correctAnswers},${test.items.length}\n`;
    });

    // Créer et télécharger le fichier
    const blob = new Blob([csvContent], { type: "text/csv;charset=utf-8;" });
    const link = document.createElement("a");
    const url = URL.createObjectURL(blob);
    link.setAttribute("href", url);
    link.setAttribute("download", "resultats-decival.csv");
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
  }

  // Écouteur d'événement pour le bouton d'exportation
  document.addEventListener("DOMContentLoaded", () => {
    const exportButton = document.getElementById("exportButton");
    if (exportButton) {
      exportButton.addEventListener("click", exportResults);
    }
  });
</script>
